version: '3'

services:
  hydra_db:
    labels:
      - maintainer="Mohsen Taher"
      - version="v1.0.0"
      - description="com.x-app.infra"
    build:
      context: ./db
      dockerfile: Dockerfile
      args:
        DB_USER: ${DB_USER}
        DB_PASSWORD: ${DB_PASSWORD}
    container_name: hydra_db
    hostname: hydra_db
    ports:
      - "5432:5432"
  hydra:
    build:
      context: ./hydra
      dockerfile: Dockerfile
      args:
        DB_USER: ${DB_USER}
        DB_PASSWORD: ${DB_PASSWORD}
        DB_SCHEMA: ${DB_SCHEMA}
    container_name: hydra
    ports:
      - "4444:4444"
      - "4445:4445"
      - "5555:5555"
    restart: unless-stopped
    depends_on:
      - hydra-migrate
  hydra-migrate:
    image: oryd/hydra:latest
    container_name: hydra-migrate
    environment:
      - DSN=postgres://${DB_USER}:${DB_PASSWORD}@hydra_db:5432/${DB_SCHEMA}?sslmode=disable&max_conns=20&max_idle_conns=4
    command:
      migrate sql -e --yes
    restart: on-failure

  zoo:
    image: confluentinc/cp-zookeeper:7.3.0
    hostname: zoo1
    container_name: zoo1
    ports:
      - "2181:2181"
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_SERVER_ID: 1
      ZOOKEEPER_SERVERS: zoo1:2888:3888

  kafka:
    image: confluentinc/cp-kafka:7.3.0
    hostname: kafka1
    container_name: kafka1
    ports:
      - "9092:9092"
      - "29092:29092"
    environment:
      KAFKA_ADVERTISED_LISTENERS: INTERNAL://kafka1:19092,EXTERNAL://${DOCKER_HOST_IP:-127.0.0.1}:9092,DOCKER://host.docker.internal:29092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: INTERNAL:PLAINTEXT,EXTERNAL:PLAINTEXT,DOCKER:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: INTERNAL
      KAFKA_ZOOKEEPER_CONNECT: "zoo1:2181"
      KAFKA_BROKER_ID: 1
      KAFKA_LOG4J_LOGGERS: "kafka.controller=INFO,kafka.producer.async.DefaultEventHandler=INFO,state.change.logger=INFO"
      KAFKA_AUTHORIZER_CLASS_NAME: kafka.security.authorizer.AclAuthorizer
      KAFKA_ALLOW_EVERYONE_IF_NO_ACL_FOUND: "true"
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: 'false'
    depends_on:
      - zoo
  kafka-ui:
    image: provectuslabs/kafka-ui
    container_name: kafka-ui
    ports:
      - "8080:8080"
    restart: always
    environment:
      - KAFKA_CLUSTERS_0_NAME=local
      - KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS=kafka:19092